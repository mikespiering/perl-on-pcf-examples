ServerRoot "${HOME}/httpd"
Listen ${PORT}
ServerAdmin "${HTTPD_SERVER_ADMIN}"
ServerName "0.0.0.0"
DocumentRoot "${HOME}/#{WEBDIR}"
Include conf/extra/httpd-modules.conf
Include conf/extra/httpd-directories.conf
Include conf/extra/httpd-mime.conf
Include conf/extra/httpd-deflate.conf
Include conf/extra/httpd-logging.conf
Include conf/extra/httpd-mpm.conf
Include conf/extra/httpd-default.conf
Include conf/extra/httpd-remoteip.conf
Include conf/extra/httpd-php.conf

<IfModule !mod_headers.c>
  LoadModule headers_module modules/mod_headers.so
</IfModule>

# You can use mod_cgi support like this:
<Directory "${HOME}/#{WEBDIR}/cgi-bin">
  Options +ExecCGI
  SetHandler cgi-script
</Directory>

# You can use mod_perl support like this:
LoadModule perl_module "${HOME}/lib-cflinuxfs2/apache2/modules/mod_perl.so"

# You can load a Perl script to add paths containing modules
PerlRequire "${HOME}/startup.pl"

PerlModule Apache2::compat

# You can expose a directory that can be handled with mod_perl's Registry like this:
# Note: This requires enabling mod_alias in httpd-modules.conf
Alias /perl/ "${HOME}/#{WEBDIR}/perl/"
<Location /perl/>
    SetHandler perl-script
    PerlResponseHandler ModPerl::Registry
    PerlOptions +ParseHeaders
    Options +ExecCGI
    Require all granted
</Location>

# You can expose a custom mod_perl Handler module like this:
<Location /hello>
    SetHandler perl-script
    PerlResponseHandler HelloWorld::Hello
</Location>

# You can expost the status endpoint like this:
<Location /perl-status>
    SetHandler perl-script
    PerlResponseHandler Apache2::Status
    Require all granted
</Location>

RequestHeader unset Proxy early
